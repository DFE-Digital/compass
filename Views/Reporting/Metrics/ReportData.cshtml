@using FipsReporting.Models
@using FipsReporting.Helpers
@model MetricReportingViewModel
@{
    ViewData["Title"] = "Submit Reporting Data - " + Model.Metric.Name;
    ViewData["ActiveNav"] = "reporting-metrics";
}

<div class="govuk-width-container">
    <div class="govuk-main-wrapper">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-xl">Submit reporting data</h1>
                <h2 class="govuk-heading-l">@Model.Metric.Name</h2>
                
                @if (!string.IsNullOrEmpty(Model.Metric.Description))
                {
                    <p class="govuk-body">@Model.Metric.Description</p>
                }

                <form method="post" asp-action="SubmitReportData">
                    <input type="hidden" asp-for="MetricId" value="@Model.Metric.Id" />
                    <input type="hidden" asp-for="ProductId" value="@Model.ProductId" />

                    <div class="govuk-form-group">
                        <label class="govuk-label" for="ReportingPeriod">
                            <strong>Reporting Period</strong>
                        </label>
                        <select class="govuk-select" asp-for="ReportingPeriod" required>
                            <option value="">Select reporting period</option>
                            <option value="weekly">Weekly</option>
                            <option value="fortnightly">Fortnightly</option>
                            <option value="monthly">Monthly</option>
                            <option value="quarterly">Quarterly</option>
                            <option value="ad-hoc">Ad-hoc</option>
                        </select>
                        <span asp-validation-for="ReportingPeriod" class="govuk-error-message"></span>
                    </div>

                    @if (Model.Metric.AllowNotApplicable)
                    {
                        <div class="govuk-form-group">
                            <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                <div class="govuk-checkboxes__item">
                                    <input class="govuk-checkboxes__input" asp-for="IsNotApplicable" type="checkbox" id="IsNotApplicable">
                                    <label class="govuk-label govuk-checkboxes__label" for="IsNotApplicable">
                                        This metric is not applicable to my product
                                    </label>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="govuk-form-group" id="value-group">
                        <label class="govuk-label" for="Value">
                            <strong>Value</strong>
                        </label>
                        <div class="govuk-hint">
                            @switch (Model.Metric.MeasurementType.ToLower())
                            {
                                case "percentage":
                                    <text>Enter a percentage value (e.g., 85 for 85%)</text>
                                    break;
                                case "number":
                                    <text>Enter a numeric value</text>
                                    break;
                                case "text":
                                    <text>Enter descriptive text</text>
                                    break;
                                default:
                                    <text>Enter the metric value</text>
                                    break;
                            }
                        </div>
                        @if (Model.Metric.MeasurementType.ToLower() == "text")
                        {
                            <textarea class="govuk-textarea" asp-for="Value" rows="4" placeholder="Enter your response here..."></textarea>
                        }
                        else
                        {
                            <input class="govuk-input" asp-for="Value" type="@(Model.Metric.MeasurementType.ToLower() == "number" ? "number" : "text")" placeholder="Enter value...">
                        }
                        <span asp-validation-for="Value" class="govuk-error-message"></span>
                    </div>

                    <div class="govuk-form-group">
                        <label class="govuk-label" for="Comment">
                            <strong>Comments (Optional)</strong>
                        </label>
                        <textarea class="govuk-textarea" asp-for="Comment" rows="3" placeholder="Add any additional context or comments..."></textarea>
                        <span asp-validation-for="Comment" class="govuk-error-message"></span>
                    </div>

                    <div class="govuk-button-group">
                        <button class="govuk-button" type="submit">Submit Data</button>
                        <a class="govuk-button govuk-button--secondary" href="@Url.Action("Details", new { id = Model.Metric.Id })">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script nonce="@Html.GetNonce()">
    document.addEventListener('DOMContentLoaded', function() {
        const notApplicableCheckbox = document.getElementById('IsNotApplicable');
        const valueGroup = document.getElementById('value-group');
        
        if (notApplicableCheckbox) {
            function toggleValueGroup() {
                if (notApplicableCheckbox.checked) {
                    valueGroup.style.display = 'none';
                } else {
                    valueGroup.style.display = 'block';
                }
            }
            
            notApplicableCheckbox.addEventListener('change', toggleValueGroup);
            toggleValueGroup(); // Initial state
        }
    });
</script>
