@model FipsReporting.Models.ProductViewModel
@{
    ViewData["Title"] = "Product Details";
}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h4>@Model.Title</h4>
                <div>
                    <span class="badge @GetStateBadgeClass(Model.State)">@Model.State</span>
                    @if (Model.IsPublished)
                    {
                        <span class="badge bg-success">Published</span>
                    }
                    else
                    {
                        <span class="badge bg-warning">Draft</span>
                    }
                </div>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.FipsId))
                {
                    <div class="mb-3">
                        <strong>FIPS ID:</strong> <span class="badge bg-info">@Model.FipsId</span>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.ShortDescription))
                {
                    <div class="mb-3">
                        <strong>Description:</strong>
                        <p>@Model.ShortDescription</p>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.LongDescription))
                {
                    <div class="mb-3">
                        <strong>Detailed Description:</strong>
                        <p>@Model.LongDescription</p>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.ProductUrl))
                {
                    <div class="mb-3">
                        <strong>Product URL:</strong>
                        <a href="@Model.ProductUrl" target="_blank" class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-external-link-alt"></i> Visit Product
                        </a>
                    </div>
                }

                @if (Model.CategoryValues.Any())
                {
                    <div class="mb-3">
                        <strong>Categories:</strong>
                        <div class="d-flex flex-wrap gap-1 mt-1">
                            @foreach (var category in Model.CategoryValues)
                            {
                                <span class="badge bg-primary">@category</span>
                            }
                        </div>
                    </div>
                }

                @if (Model.ProductContacts.Any())
                {
                    <div class="mb-3">
                        <strong>Product Contacts:</strong>
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Role</th>
                                        <th>Name</th>
                                        <th>Email</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var contact in Model.ProductContacts)
                                    {
                                        <tr>
                                            <td>@contact.Role</td>
                                            <td>@contact.DisplayName</td>
                                            <td>@contact.UserEmail</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }

                <div class="row">
                    <div class="col-md-6">
                        <strong>Created:</strong> @Model.CreatedAt.ToString("dd MMM yyyy")
                    </div>
                    <div class="col-md-6">
                        <strong>Last Updated:</strong> @Model.UpdatedAt.ToString("dd MMM yyyy")
                    </div>
                </div>
            </div>
        </div>

        <!-- Applicable Metrics -->
        @if (ViewBag.ApplicableMetrics != null && ((IEnumerable<FipsReporting.Data.ReportingMetric>)ViewBag.ApplicableMetrics).Any())
        {
            <div class="card mt-4">
                <div class="card-header">
                    <h5>Applicable Reporting Metrics</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var metric in (IEnumerable<FipsReporting.Data.ReportingMetric>)ViewBag.ApplicableMetrics)
                        {
                            <div class="col-md-6 mb-3">
                                <div class="card border">
                                    <div class="card-body">
                                        <h6 class="card-title">@metric.Name</h6>
                                        <p class="card-text small">@metric.Description</p>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <span class="badge bg-info">@metric.MeasurementType</span>
                                                @if (metric.IsMandatory)
                                                {
                                                    <span class="badge bg-danger">Mandatory</span>
                                                }
                                                @if (metric.AllowNotApplicable)
                                                {
                                                    <span class="badge bg-warning">N/A Allowed</span>
                                                }
                                            </div>
                                            <a asp-action="ReportData" asp-route-productId="@Model.Id" asp-route-metricId="@metric.Id" 
                                               class="btn btn-sm btn-primary">Report Data</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    
    <div class="col-md-4">
        <!-- Allocation Status -->
        <div class="card">
            <div class="card-header">
                <h5>Allocation Status</h5>
            </div>
            <div class="card-body">
                @if (Model.IsAllocatedToUser)
                {
                    <div class="alert alert-success">
                        <i class="fas fa-check-circle"></i>
                        <strong>Allocated to you</strong>
                        <p class="mb-0 small">You can report on this product and manage its milestones.</p>
                    </div>
                    <form asp-action="DeallocateProduct" method="post">
                        <input type="hidden" name="productId" value="@Model.Id" />
                        <button type="submit" class="btn btn-warning w-100">
                            <i class="fas fa-minus"></i> Deallocate Product
                        </button>
                    </form>
                }
                else
                {
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i>
                        <strong>Not allocated</strong>
                        <p class="mb-0 small">Allocate this product to start reporting on it.</p>
                    </div>
                    <form asp-action="AllocateProduct" method="post">
                        <input type="hidden" name="productId" value="@Model.Id" />
                        <button type="submit" class="btn btn-success w-100">
                            <i class="fas fa-plus"></i> Allocate Product
                        </button>
                    </form>
                }
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="card mt-3">
            <div class="card-header">
                <h5>Quick Actions</h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a asp-controller="ReportingMilestones" asp-action="Index" asp-route-productId="@Model.Id" 
                       class="btn btn-outline-primary">
                        <i class="fas fa-flag"></i> View Milestones
                    </a>
                    <a asp-controller="ReportingMilestones" asp-action="Create" asp-route-productId="@Model.Id" 
                       class="btn btn-outline-success">
                        <i class="fas fa-plus"></i> Create Milestone
                    </a>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Products
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStateBadgeClass(string state)
    {
        return state switch
        {
            "Active" => "bg-success",
            "New" => "bg-primary",
            "Rejected" => "bg-danger",
            "Removed" => "bg-dark",
            _ => "bg-secondary"
        };
    }
}
