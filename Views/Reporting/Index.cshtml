@model FipsReporting.Models.ReportingViewModel

@{
    ViewData["Title"] = "Performance Reporting Dashboard";
    ViewData["ActiveNav"] = "reporting";
    ViewData["ActiveNavItem"] = "dashboard";
}

@section BeforeContent {
    <div class="dfe-masthead">
        <div class="govuk-width-container">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full">
                    <span class="govuk-caption-l">COMPASS reporting</span>
                    <h1 class="govuk-heading-xl govuk-!-margin-bottom-0">Dashboard</h1>
                      </div>
            </div>
        </div>
    </div>
}


        <div class="govuk-grid-row">
            <!-- Vertical Navigation -->
            <div class="govuk-grid-column-one-quarter">
                <nav class="dfe-vertical-nav" data-module="dfe-vertical-nav">
                    <ul class="dfe-vertical-nav__section">
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "dashboard" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Index", "Reporting")">
                                Dashboard
                            </a>
                        </li>
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "products" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Products", "Reporting")">
                                Your products
                            </a>
                        </li>
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "performance" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Performance", "Reporting")">
                                Performance reporting
                            </a>
                        </li>
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "milestones" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Milestones", "Reporting")">
                                Milestones
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>

            <!-- Main Content -->
            <div class="govuk-grid-column-three-quarters">
                <!-- Your Tasks Table -->
                <div class="govuk-grid-row">
                    <div class="govuk-grid-column-full">
                        <h2 class="govuk-heading-l">Your reporting tasks</h2>
                        
                        @if (Model.ReportingPeriods.Any() && Model.ReportingPeriods.Where(p => p.Status != "Submitted").Any())
                        {
                            <div class="govuk-table-container">
                                <table class="govuk-table">
                                    <thead class="govuk-table__head">
                                        <tr class="govuk-table__row">
                                            <th scope="col" class="govuk-table__header govuk-!-width-one-third">Task</th>
                                            <th scope="col" class="govuk-table__header">Due by</th>
                                            <th scope="col" class="govuk-table__header govuk-!-width-one-third">Status</th>
                                        </tr>
                                    </thead>
                                    <tbody class="govuk-table__body">
                                        @foreach (var period in Model.ReportingPeriods.Where(p => p.Status != "Submitted").OrderBy(p => p.DueDate))
                                        {
                                            <tr class="govuk-table__row">
                                                <td class="govuk-table__cell">
                                                    <a href="/reporting/@period.DueDate.Year/@period.Month.Split(' ')[0].ToLower()" class="govuk-link">
                                                       @period.Month
                                                    </a>
                                                    <div class="govuk-body-s govuk-!-margin-bottom-0 govuk-!-padding-top-0">@period.Period</div>
                                                </td>
                                                <td class="govuk-table__cell">
                                                    @period.DueDate.ToString("dd MMM yyyy")
                                                </td>
                                                <td class="govuk-table__cell">
                                                    @if (period.Status == "Overdue")
                                                    {
                                                        <span class="govuk-tag govuk-tag--red">Overdue</span>
                                                    }
                                                    else if (period.Status == "Due")
                                                    {
                                                        <span class="govuk-tag govuk-tag--yellow">Due</span>
                                                    }
                                                    else if (period.Status == "Submitted")
                                                    {
                                                        <span class="govuk-tag govuk-tag--green">Submitted</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="govuk-tag govuk-tag--grey">@period.Status</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="govuk-inset-text">
                                <p class="govuk-body">No tasks currently assigned to you.</p>
                            </div>
                        }
                    </div>
                </div>

                <!-- Submitted Returns Section -->
                <div class="govuk-grid-row govuk-!-margin-top-6">
                    <div class="govuk-grid-column-full">
                        <h2 class="govuk-heading-l">Recent submitted returns</h2>
                        
                        @if (Model.SubmittedReturns.Any())
                        {
                            <div class="govuk-table-container">
                                <table class="govuk-table">
                                    <thead class="govuk-table__head">
                                        <tr class="govuk-table__row">
                                            <th scope="col" class="govuk-table__header govuk-!-width-one-third">Period</th>
                                            <th scope="col" class="govuk-table__header">Due by</th>
                                            <th scope="col" class="govuk-table__header govuk-!-width-one-third">Submitted</th>
                                        </tr>
                                    </thead>
                                    <tbody class="govuk-table__body">
                                        @foreach (var submission in Model.SubmittedReturns.Take(3))
                                        {
                                            var parts = submission.ReportingPeriod.Split('-');
                                            var year = parts[0];
                                            var monthNameLower = parts[1];
                                            var monthName = char.ToUpper(monthNameLower[0]) + monthNameLower.Substring(1);
                                            
                                            // Calculate the period display (e.g., "1 to 31 August")
                                            var monthDate = DateTime.ParseExact($"{monthName} {year}", "MMMM yyyy", null);
                                            var lastDayOfMonth = DateTime.DaysInMonth(int.Parse(year), monthDate.Month);
                                            var periodDisplay = $"1 to {lastDayOfMonth} {monthName}";
                                            var fullMonthName = $"{monthName} {year}";
                                            
                                            // Calculate due date (7th of following month)
                                            var dueDate = monthDate.AddMonths(1).AddDays(6);
                                            <tr class="govuk-table__row">
                                                <td class="govuk-table__cell">
                                                    <a href="/reporting/@year/@monthName.ToLower()/performance/view" class="govuk-link">
                                                        @fullMonthName
                                                    </a>
                                                    <div class="govuk-body-s govuk-!-margin-bottom-0">@periodDisplay</div>
                                                </td>
                                                <td class="govuk-table__cell">
                                                    @dueDate.ToString("dd MMM yyyy")
                                                </td>
                                                <td class="govuk-table__cell">
                                                    @submission.SubmittedAt.ToString("dd MMM yyyy 'at' HH:mm")
                                                    <div class="govuk-body-s govuk-!-margin-bottom-0">@submission.SubmittedBy</div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            
                            @if (Model.SubmittedReturns.Count > 3)
                            {
                                <div class="govuk-!-margin-top-4">
                                    <a href="@Url.Action("SubmittedReturns", "Reporting")" class="govuk-link">
                                        View all submitted returns (@Model.SubmittedReturns.Count total)
                                    </a>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="govuk-inset-text">
                                <p class="govuk-body">No returns have been submitted yet.</p>
                            </div>
                        }
                    </div>
                </div>

                <!-- Milestone Updates Section -->
                <div class="govuk-grid-row govuk-!-margin-top-6">
                    <div class="govuk-grid-column-full">
                        <h2 class="govuk-heading-l">Milestone updates</h2>
                        <div class="govuk-inset-text">
                            <p class="govuk-body">
                                <a href="@Url.Action("Milestones", "Reporting")" class="govuk-link">
                                    View and update your milestones
                                </a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
