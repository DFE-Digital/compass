@model List<FipsReporting.Data.UserPermission>

@{
    ViewData["Title"] = "Manage Users";
    ViewData["ActiveNav"] = "admin";
    ViewData["ActiveNavItem"] = "manage-users";
}

@section BeforeContent {
    <div class="dfe-masthead dfe-masthead--with-links">
        <div class="govuk-width-container">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full">
                    <span class="govuk-caption-l govuk-!-margin-top-6">COMPASS admin</span>
                    <h1 class="govuk-heading-xl">Manage users</h1>
                    <p class="govuk-body-l govuk-!-margin-bottom-0">Manage user permissions and access to the COMPASS reporting system.</p>
                </div>
            </div>
        </div>

    </div>
}

<div class="govuk-width-container">
    <div class="govuk-main-wrapper">
        <div class="govuk-grid-row">
            <!-- Vertical Navigation -->
            <div class="govuk-grid-column-one-quarter">
                <nav class="dfe-vertical-nav" data-module="dfe-vertical-nav">
                    <ul class="dfe-vertical-nav__section">
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "dashboard" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Index", "Admin")">
                                Dashboard
                            </a>
                        </li>
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "manage-metrics" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Index", "AdminPerformanceMetrics")">
                                Manage Metrics
                            </a>
                        </li>
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "manage-users" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Index", "AdminUser")">
                                Manage users
                            </a>
                        </li>
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "manage-objectives" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Index", "AdminObjectives")">
                                Manage Objectives
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>

            <!-- Main Content -->
            <div class="govuk-grid-column-three-quarters">
                <!-- Search Bar -->
                <div class="govuk-grid-row govuk-!-margin-bottom-4">
                    <div class="govuk-grid-column-two-thirds">
                        <div class="govuk-form-group">
                            <label class="govuk-label" for="users-search">Search users</label>
                            <input class="govuk-input" id="users-search" name="search" type="text" placeholder="Search by name or email...">
                        </div>
                    </div>
                    <div class="govuk-grid-column-one-third">
                        <div class="govuk-form-group">
                            <label class="govuk-label" for="status-filter">Filter by status</label>
                            <select class="govuk-select" id="status-filter">
                                <option value="">All users</option>
                                <option value="active">Active</option>
                                <option value="inactive">Inactive</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="govuk-summary-card">
                    <div class="govuk-summary-card__title-wrapper">
                        <h2 class="govuk-summary-card__title">
                            Users
                        </h2>
                        <ul class="govuk-summary-card__actions">
                            <li class="govuk-summary-card__action">
                                <a class="govuk-link" href="@Url.Action("Create")">
                                    Add user
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="govuk-summary-card__content">
                        @if (Model != null && Model.Any())
                        {
                            <table class="govuk-table">
                                <thead class="govuk-table__head">
                                    <tr class="govuk-table__row">
                                        <th scope="col" class="govuk-table__header">Name</th>
                                        <th scope="col" class="govuk-table__header">Status</th>
                                    </tr>
                                </thead>
                                <tbody class="govuk-table__body">
                                    @foreach (var user in Model)
                                    {
                                        <tr class="govuk-table__row" data-name="@user.Name.ToLower()" data-email="@user.Email.ToLower()" data-status="@(user.IsActive ? "active" : "inactive")">
                                            <td class="govuk-table__cell">
                                                <a class="govuk-link govuk-link--no-visited-state" href="@Url.Action("Edit", new { id = user.Id })">
                                                    @user.Name
                                                </a>
                                                <br>
                                                <span class="govuk-body-s govuk-!-font-weight-regular">@user.Email</span>
                                            </td>
                                            <td class="govuk-table__cell">
                                                <span class="govuk-tag govuk-tag--@(user.IsActive ? "green" : "red")">
                                                    @(user.IsActive ? "Active" : "Inactive")
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                                else
                                {
                                    <div class="govuk-inset-text">
                                        <p class="govuk-body">No users found.</p>
                                        <p class="govuk-body">
                                            <a href="@Url.Action("Create")" class="govuk-link">
                                                Add your first user â†’
                                            </a>
                                        </p>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script nonce="@Html.GetNonce()">
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('users-search');
        const statusFilter = document.getElementById('status-filter');
        const tableRows = document.querySelectorAll('.govuk-table__row[data-name]');

        function filterRows() {
            const searchTerm = searchInput.value.toLowerCase();
            const statusValue = statusFilter.value.toLowerCase();

            tableRows.forEach(row => {
                const name = row.getAttribute('data-name');
                const email = row.getAttribute('data-email');
                const status = row.getAttribute('data-status');

                const matchesSearch = name.includes(searchTerm) || email.includes(searchTerm);
                const matchesStatus = !statusValue || status.includes(statusValue);

                if (matchesSearch && matchesStatus) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        searchInput.addEventListener('input', filterRows);
        statusFilter.addEventListener('change', filterRows);
    });
</script>