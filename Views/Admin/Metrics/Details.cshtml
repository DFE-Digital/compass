@model FipsReporting.Data.PerformanceMetric

@{
    ViewData["Title"] = "Metric Details";
    ViewData["ActiveNav"] = "admin";
    ViewData["ActiveNavItem"] = "metric-details";
}

@section BeforeContent {
    <div class="dfe-masthead dfe-masthead--with-links">
        <div class="govuk-width-container">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full">
                    <span class="govuk-caption-l govuk-!-margin-top-6">COMPASS admin</span>
                    <h1 class="govuk-heading-xl">@Model.Name</h1>
                    <p class="govuk-body-l govuk-!-margin-bottom-0">@Model.UniqueId</p>
                </div>
            </div>
        </div>
    </div>
}

<div class="govuk-width-container">
    <div class="govuk-main-wrapper">
        <div class="govuk-grid-row">
            <!-- Vertical Navigation -->
            <div class="govuk-grid-column-one-quarter">
                <a href="@Url.Action("Index")" class="govuk-back-link govuk-!-margin-bottom-7">Back to metrics</a>
                <nav class="dfe-vertical-nav" data-module="dfe-vertical-nav">
                    <ul class="dfe-vertical-nav__section">
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "metric-details" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Details", new { id = Model.Id })">
                                Metric details
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>

            <!-- Main Content -->
            <div class="govuk-grid-column-three-quarters">
                <h2 class="govuk-heading-l">Metric details</h2>
                
                <dl class="govuk-summary-list">
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">Name</dt>
                        <dd class="govuk-summary-list__value">@Model.Name</dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">Unique ID</dt>
                        <dd class="govuk-summary-list__value">
                            <strong>@Model.UniqueId</strong>
                        </dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">Category</dt>
                        <dd class="govuk-summary-list__value">
                            <span class="govuk-tag @GetCategoryTagClass(Model.Category)">
                                @Model.Category
                            </span>
                        </dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">Measure</dt>
                        <dd class="govuk-summary-list__value">@Model.Measure</dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">Description</dt>
                        <dd class="govuk-summary-list__value">@Model.Description</dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">Enabled</dt>
                        <dd class="govuk-summary-list__value">
                            @if (Model.Enabled)
                            {
                                <span class="govuk-tag govuk-tag--green">Enabled</span>
                            }
                            else
                            {
                                <span class="govuk-tag govuk-tag--red">Disabled</span>
                            }
                        </dd>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.ApplicablePhases))
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Applicable Phases</dt>
                            <dd class="govuk-summary-list__value">
                                @{
                                    try
                                    {
                                        var phases = System.Text.Json.JsonSerializer.Deserialize<string[]>(Model.ApplicablePhases);
                                        if (phases != null && phases.Length > 0)
                                        {
                                            foreach (var phase in phases)
                                            {
                                                <span class="govuk-tag govuk-tag--blue govuk-!-margin-right-2 govuk-!-margin-bottom-2">@phase</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="govuk-body-s">None specified</span>
                                        }
                                    }
                                    catch
                                    {
                                        <span class="govuk-body-s">Error parsing phases</span>
                                    }
                                }
                            </dd>
                        </div>
                    }
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">Created</dt>
                        <dd class="govuk-summary-list__value">
                            @Model.CreatedAt.ToString("dd MMM yyyy HH:mm")
                            @if (!string.IsNullOrEmpty(Model.CreatedBy))
                            {
                                <br><small class="text-muted">by @Model.CreatedBy</small>
                            }
                        </dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">Last Updated</dt>
                        <dd class="govuk-summary-list__value">
                            @Model.UpdatedAt.ToString("dd MMM yyyy HH:mm")
                            @if (!string.IsNullOrEmpty(Model.UpdatedBy))
                            {
                                <br><small class="text-muted">by @Model.UpdatedBy</small>
                            }
                        </dd>
                    </div>
                </dl>

                <div class="govuk-button-group">
                    <a href="@Url.Action("Edit", new { id = Model.Id })" class="govuk-button">Edit Metric</a>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetCategoryTagClass(string category)
    {
        return category switch
        {
            "User Experience" => "govuk-tag--green",
            "Performance" => "govuk-tag--blue",
            "Accessibility" => "govuk-tag--purple",
            "Security" => "govuk-tag--red",
            "Compliance" => "govuk-tag--yellow",
            _ => "govuk-tag--grey"
        };
    }
}
