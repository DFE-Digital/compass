@model IEnumerable<FipsReporting.Data.Objective>

@{
    ViewData["Title"] = "Objectives Management";
    ViewData["ActiveNav"] = "admin";
    ViewData["ActiveNavItem"] = "manage-objectives";
}

@section BeforeContent {
    <div class="dfe-masthead dfe-masthead--with-links">
        <div class="govuk-width-container">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full">
                    <span class="govuk-caption-l govuk-!-margin-top-6">COMPASS admin</span>
                    <h1 class="govuk-heading-xl">Manage objectives</h1>
                    <p class="govuk-body-l govuk-!-margin-bottom-0">Manage DDT objectives, Government Missions, Flagship programmes and other strategic objectives.</p>
                </div>
            </div>
        </div>
    </div>
}


        <div class="govuk-grid-row">
            <!-- Vertical Navigation -->
            <div class="govuk-grid-column-one-quarter">
                <nav class="dfe-vertical-nav" data-module="dfe-vertical-nav">
                    <ul class="dfe-vertical-nav__section">
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "dashboard" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Index", "Admin")">
                                Dashboard
                            </a>
                        </li>
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "manage-metrics" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Index", "AdminPerformanceMetrics")">
                                Manage metrics
                            </a>
                        </li>
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "manage-users" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Index", "AdminUser")">
                                Manage users
                            </a>
                        </li>
                        <li class="dfe-vertical-nav__section-item @(ViewData["ActiveNavItem"]?.ToString() == "manage-objectives" ? "dfe-vertical-nav__section-item--current" : "")">
                            <a class="dfe-vertical-nav__link govuk-link govuk-link--no-visited-state govuk-link--no-underline" href="@Url.Action("Index", "AdminObjectives")">
                                Manage objectives
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>

            <!-- Main Content -->
            <div class="govuk-grid-column-three-quarters">
                <!-- Search Bar -->
                <div class="govuk-grid-row govuk-!-margin-bottom-4">
                    <div class="govuk-grid-column-two-thirds">
                        <div class="govuk-form-group">
                            <label class="govuk-label" for="objectives-search">Search objectives</label>
                            <input class="govuk-input" id="objectives-search" name="search" type="text" placeholder="Search by title or reference...">
                        </div>
                    </div>
                    <div class="govuk-grid-column-one-third">
                        <div class="govuk-form-group">
                            <label class="govuk-label" for="type-filter">Filter by type</label>
                            <select class="govuk-select" id="type-filter">
                                <option value="">All types</option>
                                <option value="ddt objective">DDT Objective</option>
                                <option value="government mission">Government Mission</option>
                                <option value="flagship">Flagship</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="govuk-summary-card">
                    <div class="govuk-summary-card__title-wrapper">
                        <h2 class="govuk-summary-card__title">
                            Objectives
                        </h2>
                        <ul class="govuk-summary-card__actions">
                            <li class="govuk-summary-card__action">
                                <a class="govuk-link" href="@Url.Action("Create")">Add objective</a>
                            </li>
                        </ul>
                    </div>
                    <div class="govuk-summary-card__content">

                        @if (Model != null && Model.Any())
                        {
                            <table class="govuk-table">
                                <thead class="govuk-table__head">
                                    <tr class="govuk-table__row">
                                        <th scope="col" class="govuk-table__header">Objective</th>
                                        <th scope="col" class="govuk-table__header">Type</th>
                                        <th scope="col" class="govuk-table__header">Milestones</th>
                                    </tr>
                                </thead>
                                <tbody class="govuk-table__body">
                                    @foreach (var objective in Model)
                                    {
                                        <tr class="govuk-table__row" data-type="@objective.Type.ToLower()" data-title="@objective.Title.ToLower()" data-reference="@objective.Reference.ToLower()">
                                            <td class="govuk-table__cell">
                                                <a href="@Url.Action("Details", new { id = objective.Id })" class="govuk-link">
                                                    @objective.Title
                                                </a>
                                                <br>
                                                <span class="govuk-body-s govuk-!-font-weight-regular">@objective.Reference</span>
                                            </td>
                                            <td class="govuk-table__cell">
                                                <span class="govuk-tag @GetTypeTagClass(objective.Type)">
                                                    @objective.Type
                                                </span>
                                            </td>
                                            <td class="govuk-table__cell">
                                                <span class="govuk-badge">@objective.Milestones.Count</span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p class="govuk-body">No objectives configured yet. Add your first objective to get started.</p>
                        }
                    </div>
                </div>



@functions {
    string GetTypeTagClass(string type)
    {
        return type switch
        {
            "DDT Objective" => "govuk-tag--blue",
            "Government Mission" => "govuk-tag--green",
            "Flagship" => "govuk-tag--purple",
            _ => "govuk-tag--grey"
        };
    }
}

<script nonce="@Html.GetNonce()">
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('objectives-search');
        const typeFilter = document.getElementById('type-filter');
        const tableRows = document.querySelectorAll('.govuk-table__row[data-title]');

        function filterRows() {
            const searchTerm = searchInput.value.toLowerCase();
            const typeValue = typeFilter.value.toLowerCase();

            tableRows.forEach(row => {
                const title = row.getAttribute('data-title');
                const reference = row.getAttribute('data-reference');
                const type = row.getAttribute('data-type');

                const matchesSearch = title.includes(searchTerm) || reference.includes(searchTerm);
                const matchesType = !typeValue || type.includes(typeValue);

                if (matchesSearch && matchesType) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        searchInput.addEventListener('input', filterRows);
        typeFilter.addEventListener('change', filterRows);
    });
</script>
